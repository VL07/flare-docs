---
import type { GetStaticPaths } from "astro";
import { allPaths, groups } from "./utils/router";
import type { AnyRoute, IndexRoute, Route } from "./utils/router";
import type { AstroComponentFactory } from "astro/dist/runtime/server";
import DefaultGroupIndexContent from "./components/DefaultGroupIndexContent.astro";
import Sidebar from "./components/Sidebar.astro";
import Breadcrumb from "./components/Breadcrumb.astro";
import DefaultDocComponent from "./components/DefaultDocComponent.astro";
import Header from "./components/Header.astro";
import RightSidebar from "./components/rightSidebar.astro";


export const getStaticPaths: GetStaticPaths = async () => {
	return allPaths
}

type Props = AnyRoute
const { doc, isIndex, isEmpty, name } = Astro.props as Props

let Content: AstroComponentFactory | undefined = undefined
if (doc) {
	const { Content: content } = await doc.render()
	Content = content
}
---

<html>
	<head>
		<title>{ doc?.data.title || name }</title>
	</head>
	<body>
		<Header />
		<div class="page-container">
			<Sidebar routes={ groups } />

			<div>
				<Breadcrumb route={ Astro.props } />
				<main>
					{ !isIndex 
						? Content
							? <DefaultDocComponent route={ Astro.props as Route }><Content /></DefaultDocComponent>
							: <></>
						: isEmpty || !Content
							? <DefaultGroupIndexContent {...(Astro.props as IndexRoute)} />
							: <Content />
					}
				</main>
			</div>

			<RightSidebar route={Astro.props} />
		</div>
	</body>
</html>

<style>
	.page-container {
		width: 100vw;
		min-height: calc(100vh - );
		display: grid;
		grid-template-columns: 15rem auto 15rem;
		gap: 2rem;
	}
</style>

<style is:global>
	:root {
		--text: #000000;
		--text-secondary: #6d6d6d;
		--background: #FFFFFF;
		--background-secondary: #f2f1f5;
		--primary: #b5aff0;
		--secondary: #deb1ad;
	}

	body {
		padding: 0;
		margin: 0;
		font-family: sans-serif;
	}
</style>